plugins {
    id 'com.android.application'
}

boolean hasSigningInfo = System.getenv("SIGNING_KEYSTORE") != null && System.getenv("KEYSOTRE_PASSWORD");

String version = "0.0.0"

if(project.hasProperty('projVersion')) {
    version = project.projVersion
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.zevrant.services.zevrantandroidapp"
        minSdkVersion 30
        targetSdkVersion 30
        versionCode 1
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        if(hasSigningInfo) {
            develop {
                // You need to specify either an absolute path or include the
                // keystore file in the same directory as the build.gradle file.
                storeFile file(System.getenv("SIGNING_KEYSTORE"))
                storePassword System.getenv("KEYSOTRE_PASSWORD")
                keyAlias "1"
            }
            release {
                // You need to specify either an absolute path or include the
                // keystore file in the same directory as the build.gradle file.
                storeFile file(System.getenv("SIGNING_KEYSTORE"))
                storePassword System.getenv("KEYSOTRE_PASSWORD")
                keyPassword ""
                keyAlias "1"
            }
        }
    }

    buildTypes {
        local {
            applicationIdSuffix ".local"
            minifyEnabled false
            signingConfig debug.signingConfig
            debuggable true
        }

        develop {
            if(hasSigningInfo) {
                signingConfig signingConfigs.develop
            }
            applicationIdSuffix ".develop"
            minifyEnabled false
            signingConfig debug.signingConfig
            debuggable true
        }

        release {
            if(hasSigningInfo) {
                signingConfig signingConfigs.release
            }
            signingConfig debug.signingConfig
            minifyEnabled false
        }
    }


    flavorDimensions "version"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    def nav_version = "2.3.5"
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'org.slf4j:slf4j-android:1.7.32'
    implementation 'androidx.work:work-runtime:2.6.0-rc01'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.android.volley:volley:1.2.0'
    implementation ('com.fasterxml.jackson.core:jackson-databind:2.12.4') { transitive = true }
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "ch.acra:acra-http:5.7.0"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}